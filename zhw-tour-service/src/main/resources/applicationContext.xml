<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

    <!-- 自动扫描指定目录，将控制器加载到bean -->
    <context:component-scan base-package="com.zhw" />

    <!-- 配置 druid 数据源 -->
 <!--   <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        &lt;!&ndash; 基本属性 url、user、password、driverClass &ndash;&gt;
        <property name="username" value="root" />
        <property name="password" value="zsl151103" />
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/zsl" />
    </bean>-->

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password、driverClass -->
        <property name="username" value="bos0301" />
        <property name="password" value="bos0301" />
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
        <property name="url" value="jdbc:oracle:thin:@(DESCRIPTION=(FAILOVER=ON)(LOAD_BALANCE=OFF)(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=10.10.6.26)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=10.10.6.26)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=bostest)(FAILOVER_MODE=(type=SESSION)(method=BASIC)(RETRIES=180)(DELAY=5))))" />
        <property name="minIdle" value="5" />
        <property name="maxActive" value="100" />
        <property name="maxWait" value="60000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <property name="validationQuery" value="SELECT 1 FROM DUAL" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
    </bean>

    <!-- 配置 sessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations">
            <list>
                <value>classpath:mappers/*Mapper.xml</value>
            </list>
        </property>
    </bean>

    <!-- 配置 sqlSessionTemplate 持久化模板 -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory" />
    </bean>

    <!-- mybatis自动扫描加载SQL映射文件/接口：MapperScannerConfigurer --><!-- basePackage：指定SQL映射文件/接口所在的包(自动扫描)-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
        <property name="basePackage" value="com.zhw.mapper" />
    </bean>

    <!-- 配置事物管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置事物传播行为 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" />
            <tx:method name="find*" read-only="true" />
            <tx:method name="select*" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>

    <!-- 配置事物切入点 -->
    <aop:config>
        <aop:pointcut expression="execution(* com.zhw.service.*.*(..))" id="pointCut" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut" />
    </aop:config>

    <!-- 开始声明式事务（事物注解） -->
    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>
